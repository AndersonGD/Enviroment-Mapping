#version 330 core
out vec4 FragColor;

in vec3 Normal;
in vec3 Position;
in vec2 TexCoords;

uniform vec3 cameraPos;
uniform samplerCube skybox;
uniform sampler2D texture_diffuse1;

vec4 mixFixed( in vec4 v1, in vec4 v2, in float a )
{
    vec4 result;
    result.x = v1.x * v1.x * (1 - a) + v2.x * v2.x * a;
    result.y = v1.y * v1.y  * (1 - a) + v2.y * v2.y * a;
    result.z = v1.z * v1.z  * (1 - a) + v2.z * v2.z * a;
    result.w = v1.w * v1.w  * (1 - a) + v2.w * v2.w * a;

    result.x = sqrt(result.x);
    result.y = sqrt(result.y);
    result.z = sqrt(result.z);
    result.w = sqrt(result.w);
   
    return result;
}

void main()
{             
    float ratio = 1.00 / 1.52;
    vec3 I = normalize(Position - cameraPos);
    vec3 R = refract(I, normalize(Normal), ratio);
	
	//color = mix(texture(skybox, R), texture(texture_diffuse1, TexCoords),1);
	
	//vec4 color = mixFixed(texture(texture_diffuse1, TexCoords), texture(skybox, R), 0.3);
	
    FragColor = vec4(texture(skybox, R).rgb, 1.0);
	//FragColor = color;
	//FragColor = texture(texture_diffuse1, TexCoords);
}  